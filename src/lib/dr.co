exports = window.dr = {} if typeof exports is \undefined
nextTick = if typeof process is \object and typeof process.nextTick is \function
  then process.nextTick else !(fn) -> setTimeout fn, 0

class Dr
  !->
    @tasks = {}
    @res = {}
  run: !(tag, proc, ...deps) ->
    task = @tasks@[tag]
    task.proc = !~>
      proc (!(res) ~>
        delete task.rem
        @res[tag] = res if res is not undefined
        if task.deps
          for deptag of task.deps
            dep = @tasks[deptag]
            if 0 is --dep.rem
              nextTick dep.proc
          delete task.deps), @res
    rem = 0
    for deptag of deps
      dep = @tasks@[deptag]
      if not dep.proc or dep.rem is not undefined
        dep.@@deps.push tag
        rem++
    task.rem = rem
    if 0 is rem
      nextTick task.proc
exports.Dr = Dr

class Qr extends Dr
  !(@dr) ->
    if not @dr
      super @
      @dr = @
  run: !(tag, ...args) ->
    if @last
      args.push @last
    @last = tag
    @dr.run tag, ...args
exports.Qr = Qr

class Sr extends Dr
  !(@dr, @pfx) ->
    @seq = 0
    if typeof @dr is \string
      @pfx = @dr
      super @
      @dr = @
  run: !(tag, proc, ...deps) ->
    nproc = !(done) ~>
      @dr.run tag, proc
      done ()
    @dr.run "#{@pfx}#{@seq++}", nproc, ...deps
exports.Sr = Sr
